{"ast":null,"code":"var _jsxFileName = \"/Users/ericdarko/Documents/new_projects_2025/daily_routine/daily_routine_to-do-list/frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  setTasks\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:8080/api/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        completed: false\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Error adding task\");\n      return res.json();\n    }).then(newTask => {\n      setTasks(prev => [...prev, newTask]);\n      setTitle('');\n      setError(null);\n    }).catch(err => {\n      console.error(err);\n      setError(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Add a new task...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"8Zwd6flEqgEMffwXPUsgyW+xN34=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","setTasks","_s","title","setTitle","error","setError","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","completed","then","res","ok","Error","json","newTask","prev","catch","err","console","message","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/Users/ericdarko/Documents/new_projects_2025/daily_routine/daily_routine_to-do-list/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TaskForm({ setTasks }) {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:8080/api/tasks\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ title, completed: false }),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Error adding task\");\n        return res.json();\n      })\n      .then((newTask) => {\n        setTasks((prev) => [...prev, newTask]);\n        setTitle('');\n        setError(null);\n      })\n      .catch((err) => {\n        console.error(err);\n        setError(err.message);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Add a new task...\"\n      />\n      <button type=\"submit\">Add Task</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </form>\n  );\n}\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,KAAK;QAAEa,SAAS,EAAE;MAAM,CAAC;IAClD,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;MACjD,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,OAAO,IAAK;MACjBrB,QAAQ,CAAEsB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;MACtClB,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDkB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACrB,KAAK,CAACoB,GAAG,CAAC;MAClBnB,QAAQ,CAACmB,GAAG,CAACE,OAAO,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;EAED,oBACE5B,OAAA;IAAM6B,QAAQ,EAAErB,YAAa;IAAAsB,QAAA,gBAC3B9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE5B,KAAM;MACb6B,QAAQ,EAAGxB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFvC,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtCjC,KAAK,iBAAIN,OAAA;MAAGwC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAX,QAAA,EAAExB;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEX;AAACpC,EAAA,CAtCQF,QAAQ;AAAAyC,EAAA,GAARzC,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}